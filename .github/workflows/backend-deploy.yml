name: Deploy to EC2 via SSM

on:
  push:
    branches:
      - main   # your deployment branch

env:
  AWS_REGION: ap-south-1
  AWS_ACCOUNT_ID: 312471576153
  ECR_REPOSITORY: coffeespace-backend
  APP_DIR: /home/ubuntu/app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # ✅ Build and push image to ECR (keep as you already had it)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build, tag, and push docker image
        run: |
          IMAGE_TAG=latest
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      # ✅ Trigger SSM on EC2 to pull and run docker-compose
      - name: Deploy on EC2 via SSM
        run: |
          aws ssm send-command \
            --targets "Key=instanceIds,Values=${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy latest backend container" \
            --region $AWS_REGION \
            --parameters 'commands=[
              "cd $APP_DIR",
              "echo AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID > .env",
              "echo AWS_REGION=$AWS_REGION >> .env",
              "docker compose pull backend",
              "docker compose up -d"
            ]'
