name: Deploy to EC2 via SSM

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  IMAGE_NAME: coffeespace-backend
  APP_DIR: /home/ubuntu/app
  ECR_REPO: coffeespace-backend
  EC2_INSTANCE_IDS: i-0dbc533f9c7a8cf30  # Replace with your EC2 ID(s)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Validate AWS secrets
        run: |
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ] || [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
            echo "❌ AWS secrets are missing!"
            exit 1
          else
            echo "✅ AWS secrets are available."
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get AWS Account ID
        run: echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: Ensure ECR repo exists
        run: |
          set +e
          aws ecr describe-repositories --repository-names "$ECR_REPO" --region "$AWS_REGION"
          if [ $? -ne 0 ]; then
            aws ecr create-repository --repository-name "$ECR_REPO" --region "$AWS_REGION" || true
          else
            echo "✅ ECR repo $ECR_REPO already exists."
          fi
          set -e

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

      - name: Build Docker image
        run: docker build -t "$IMAGE_NAME:latest" .

      - name: Tag Docker image
        run: |
          docker tag "$IMAGE_NAME:latest" "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:latest"
          docker tag "$IMAGE_NAME:latest" "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${GITHUB_SHA}"

      - name: Push image to ECR
        run: |
          docker push "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:latest"
          docker push "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${GITHUB_SHA}"

      - name: Deploy to EC2 via SSM
        run: |
          aws ssm send-command \
            --targets "Key=instanceIds,Values=${EC2_INSTANCE_IDS}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy backend + MySQL using Docker Compose" \
            --region "$AWS_REGION" \
            --parameters "commands=[
              'sudo apt-get update && sudo apt-get install -y docker.io docker-compose',
              'mkdir -p $APP_DIR',
              'cp $GITHUB_WORKSPACE/docker-compose.yml $APP_DIR/',
              'cd $APP_DIR',
              'docker compose pull',
              'docker compose up -d --remove-orphans',
              'docker ps -a'
            ]"
