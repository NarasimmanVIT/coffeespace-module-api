name: Backend CI/CD to EC2 (with Postgres & SSM)

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ap-south-1
  IMAGE_REPO_NAME: coffeespace-backend
  CONTAINER_NAME: coffeespace-backend
  EC2_INSTANCE_IDS: i-0dbc533f9c7a8cf30  # <-- replace with your EC2 ID

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region $AWS_REGION \
            | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com

      - name: Build, tag, and push image
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          IMAGE_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:latest
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Deploy to EC2 via SSM
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          aws ssm send-command \
            --targets "Key=InstanceIds,Values=${EC2_INSTANCE_IDS}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy coffeespace-backend via Docker Compose" \
            --region "$AWS_REGION" \
            --parameters '{
              "commands": [
                "set -euo pipefail",
                "echo \"==> Installing SSM Agent if missing\"",
                "if ! systemctl status amazon-ssm-agent >/dev/null 2>&1; then curl -o /tmp/amazon-ssm-agent.deb https://s3.amazonaws.com/amazon-ssm-ap-south-1/latest/debian_amd64/amazon-ssm-agent.deb && sudo dpkg -i /tmp/amazon-ssm-agent.deb && sudo systemctl enable amazon-ssm-agent && sudo systemctl start amazon-ssm-agent; fi",
                "echo \"==> Fetch docker-compose.yml\"",
                "curl -fsSL https://coffee-shop-space.s3.ap-south-1.amazonaws.com/docker-compose.yml -o /home/ubuntu/app/docker-compose.yml",
                "cd /home/ubuntu/app",
                "echo \"==> Logging in to ECR\"",
                "aws ecr get-login-password --region '"$AWS_REGION"' | sudo docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.'"$AWS_REGION"'.amazonaws.com",
                "echo \"==> Pulling and starting containers\"",
                "sudo docker compose pull || sudo docker-compose pull",
                "sudo docker compose up -d --remove-orphans || sudo docker-compose up -d --remove-orphans",
                "sudo docker ps -a"
              ]
            }'
